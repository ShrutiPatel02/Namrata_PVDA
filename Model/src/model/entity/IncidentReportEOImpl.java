package model.entity;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Apr 24 14:48:54 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class IncidentReportEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Incidentid {
            public Object get(IncidentReportEOImpl obj) {
                return obj.getIncidentid();
            }

            public void put(IncidentReportEOImpl obj, Object value) {
                obj.setIncidentid((String)value);
            }
        }
        ,
        Incidentreportedby {
            public Object get(IncidentReportEOImpl obj) {
                return obj.getIncidentreportedby();
            }

            public void put(IncidentReportEOImpl obj, Object value) {
                obj.setIncidentreportedby((Number)value);
            }
        }
        ,
        Employeeid {
            public Object get(IncidentReportEOImpl obj) {
                return obj.getEmployeeid();
            }

            public void put(IncidentReportEOImpl obj, Object value) {
                obj.setEmployeeid((Number)value);
            }
        }
        ,
        Status {
            public Object get(IncidentReportEOImpl obj) {
                return obj.getStatus();
            }

            public void put(IncidentReportEOImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        Hrid {
            public Object get(IncidentReportEOImpl obj) {
                return obj.getHrid();
            }

            public void put(IncidentReportEOImpl obj, Object value) {
                obj.setHrid((Number)value);
            }
        }
        ,
        Incidentreporteddate {
            public Object get(IncidentReportEOImpl obj) {
                return obj.getIncidentreporteddate();
            }

            public void put(IncidentReportEOImpl obj, Object value) {
                obj.setIncidentreporteddate((Date)value);
            }
        }
        ,
        Violationcode {
            public Object get(IncidentReportEOImpl obj) {
                return obj.getViolationcode();
            }

            public void put(IncidentReportEOImpl obj, Object value) {
                obj.setViolationcode((String)value);
            }
        }
        ,
        Reportingmanager {
            public Object get(IncidentReportEOImpl obj) {
                return obj.getReportingmanager();
            }

            public void put(IncidentReportEOImpl obj, Object value) {
                obj.setReportingmanager((Number)value);
            }
        }
        ,
        Disciplinaryactioncode {
            public Object get(IncidentReportEOImpl obj) {
                return obj.getDisciplinaryactioncode();
            }

            public void put(IncidentReportEOImpl obj, Object value) {
                obj.setDisciplinaryactioncode((String)value);
            }
        }
        ,
        Disciplinaryactiontypecode {
            public Object get(IncidentReportEOImpl obj) {
                return obj.getDisciplinaryactiontypecode();
            }

            public void put(IncidentReportEOImpl obj, Object value) {
                obj.setDisciplinaryactiontypecode((String)value);
            }
        }
        ,
        Incidentsummary {
            public Object get(IncidentReportEOImpl obj) {
                return obj.getIncidentsummary();
            }

            public void put(IncidentReportEOImpl obj, Object value) {
                obj.setIncidentsummary((String)value);
            }
        }
        ,
        Createddttm {
            public Object get(IncidentReportEOImpl obj) {
                return obj.getCreateddttm();
            }

            public void put(IncidentReportEOImpl obj, Object value) {
                obj.setCreateddttm((Date)value);
            }
        }
        ,
        Lastupddttm {
            public Object get(IncidentReportEOImpl obj) {
                return obj.getLastupddttm();
            }

            public void put(IncidentReportEOImpl obj, Object value) {
                obj.setLastupddttm((Date)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(IncidentReportEOImpl object);

        public abstract void put(IncidentReportEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int INCIDENTID = AttributesEnum.Incidentid.index();
    public static final int INCIDENTREPORTEDBY = AttributesEnum.Incidentreportedby.index();
    public static final int EMPLOYEEID = AttributesEnum.Employeeid.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int HRID = AttributesEnum.Hrid.index();
    public static final int INCIDENTREPORTEDDATE = AttributesEnum.Incidentreporteddate.index();
    public static final int VIOLATIONCODE = AttributesEnum.Violationcode.index();
    public static final int REPORTINGMANAGER = AttributesEnum.Reportingmanager.index();
    public static final int DISCIPLINARYACTIONCODE = AttributesEnum.Disciplinaryactioncode.index();
    public static final int DISCIPLINARYACTIONTYPECODE = AttributesEnum.Disciplinaryactiontypecode.index();
    public static final int INCIDENTSUMMARY = AttributesEnum.Incidentsummary.index();
    public static final int CREATEDDTTM = AttributesEnum.Createddttm.index();
    public static final int LASTUPDDTTM = AttributesEnum.Lastupddttm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public IncidentReportEOImpl() {
    }

    /**
     * Gets the attribute value for Incidentid, using the alias name Incidentid.
     * @return the Incidentid
     */
    public String getIncidentid() {
        return (String)getAttributeInternal(INCIDENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Incidentid.
     * @param value value to set the Incidentid
     */
    public void setIncidentid(String value) {
        setAttributeInternal(INCIDENTID, value);
    }

    /**
     * Gets the attribute value for Incidentreportedby, using the alias name Incidentreportedby.
     * @return the Incidentreportedby
     */
    public Number getIncidentreportedby() {
        return (Number)getAttributeInternal(INCIDENTREPORTEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Incidentreportedby.
     * @param value value to set the Incidentreportedby
     */
    public void setIncidentreportedby(Number value) {
        setAttributeInternal(INCIDENTREPORTEDBY, value);
    }

    /**
     * Gets the attribute value for Employeeid, using the alias name Employeeid.
     * @return the Employeeid
     */
    public Number getEmployeeid() {
        return (Number)getAttributeInternal(EMPLOYEEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Employeeid.
     * @param value value to set the Employeeid
     */
    public void setEmployeeid(Number value) {
        setAttributeInternal(EMPLOYEEID, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for Hrid, using the alias name Hrid.
     * @return the Hrid
     */
    public Number getHrid() {
        return (Number)getAttributeInternal(HRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Hrid.
     * @param value value to set the Hrid
     */
    public void setHrid(Number value) {
        setAttributeInternal(HRID, value);
    }

    /**
     * Gets the attribute value for Incidentreporteddate, using the alias name Incidentreporteddate.
     * @return the Incidentreporteddate
     */
    public Date getIncidentreporteddate() {
        return (Date)getAttributeInternal(INCIDENTREPORTEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Incidentreporteddate.
     * @param value value to set the Incidentreporteddate
     */
    public void setIncidentreporteddate(Date value) {
        setAttributeInternal(INCIDENTREPORTEDDATE, value);
    }

    /**
     * Gets the attribute value for Violationcode, using the alias name Violationcode.
     * @return the Violationcode
     */
    public String getViolationcode() {
        return (String)getAttributeInternal(VIOLATIONCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Violationcode.
     * @param value value to set the Violationcode
     */
    public void setViolationcode(String value) {
        setAttributeInternal(VIOLATIONCODE, value);
    }

    /**
     * Gets the attribute value for Reportingmanager, using the alias name Reportingmanager.
     * @return the Reportingmanager
     */
    public Number getReportingmanager() {
        return (Number)getAttributeInternal(REPORTINGMANAGER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Reportingmanager.
     * @param value value to set the Reportingmanager
     */
    public void setReportingmanager(Number value) {
        setAttributeInternal(REPORTINGMANAGER, value);
    }

    /**
     * Gets the attribute value for Disciplinaryactioncode, using the alias name Disciplinaryactioncode.
     * @return the Disciplinaryactioncode
     */
    public String getDisciplinaryactioncode() {
        return (String)getAttributeInternal(DISCIPLINARYACTIONCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Disciplinaryactioncode.
     * @param value value to set the Disciplinaryactioncode
     */
    public void setDisciplinaryactioncode(String value) {
        setAttributeInternal(DISCIPLINARYACTIONCODE, value);
    }

    /**
     * Gets the attribute value for Disciplinaryactiontypecode, using the alias name Disciplinaryactiontypecode.
     * @return the Disciplinaryactiontypecode
     */
    public String getDisciplinaryactiontypecode() {
        return (String)getAttributeInternal(DISCIPLINARYACTIONTYPECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Disciplinaryactiontypecode.
     * @param value value to set the Disciplinaryactiontypecode
     */
    public void setDisciplinaryactiontypecode(String value) {
        setAttributeInternal(DISCIPLINARYACTIONTYPECODE, value);
    }

    /**
     * Gets the attribute value for Incidentsummary, using the alias name Incidentsummary.
     * @return the Incidentsummary
     */
    public String getIncidentsummary() {
        return (String)getAttributeInternal(INCIDENTSUMMARY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Incidentsummary.
     * @param value value to set the Incidentsummary
     */
    public void setIncidentsummary(String value) {
        setAttributeInternal(INCIDENTSUMMARY, value);
    }

    /**
     * Gets the attribute value for Createddttm, using the alias name Createddttm.
     * @return the Createddttm
     */
    public Date getCreateddttm() {
        return (Date)getAttributeInternal(CREATEDDTTM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createddttm.
     * @param value value to set the Createddttm
     */
    public void setCreateddttm(Date value) {
        setAttributeInternal(CREATEDDTTM, value);
    }

    /**
     * Gets the attribute value for Lastupddttm, using the alias name Lastupddttm.
     * @return the Lastupddttm
     */
    public Date getLastupddttm() {
        return (Date)getAttributeInternal(LASTUPDDTTM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Lastupddttm.
     * @param value value to set the Lastupddttm
     */
    public void setLastupddttm(Date value) {
        setAttributeInternal(LASTUPDDTTM, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param incidentid key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String incidentid) {
        return new Key(new Object[]{incidentid});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entity.IncidentReportEO");
        }
        return mDefinitionObject;
    }
}
